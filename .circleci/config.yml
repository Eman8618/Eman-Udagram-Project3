version: 2.1
orbs:
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@1.3.1
  eb: circleci/aws-elastic-beanstalk@1.0.0

jobs:
  CICD:
    docker:
      - image: 'cimg/node:16.15.0'
    steps: 
      - node/install
      - checkout
      - eb/setup
      - aws-cli/install
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
     
      - run:
          name: Install Backend dependencies
          command: npm run bkend-directory&&npm run bkend-install
      - run:
          name: Install Frontend  dependencies
          command: npm run frend-directory&&npm run frend-install

      - run:
          name: backend build
          command: cd udagram-api&&npm install&&npm run build
      
      - run:
          name: Frontend build
          command: cd udagram-frontend&& npm config set legacy-peer-deps true&&npm install&&npm run build
      
      - run:
          name:  Backend deploy
          command: cd udagram-api/www && eb init udagram-api -r $AWS_DEFAULT_REGION  -p node.js && eb use udagramapi-env  &&  eb setenv ENV=$ENV POSTGRES_HOST=$POSTGRES_HOST POSTGRES_DB=$AWS_DATABASE POSTGRES_USER=$POSTGRES_USERNAME POSTGRES_PASSWORD=$POSTGRES_PASSWORD BCRYPT_PASSWORD=$BCRYPT_PASSWORD JWT_SECRET=$JWT_SECRET SALT_ROUNDS=$SALT_ROUNDS  PORT=$POSTGRES_PORT && eb deploycd udagram-api/www && eb init udagram-api -r AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION AWS_SECRET_ACCESS_ID=$AWS_SECRET_ACCESS_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -p node.js && eb use udagram-api &&  eb setenv ENV=$ENV POSTGRES_HOST=$POSTGRES_HOST POSTGRES_DB=$AWS_DATABASE POSTGRES_USER=$POSTGRES_USERNAME POSTGRES_PASSWORD=$POSTGRES_PASSWORD BCRYPT_PASSWORD=$BCRYPT_PASSWORD JWT_SECRET=$JWT_SECRET SALT_ROUNDS=$SALT_ROUNDS  PORT=$POSTGRES_PORT && eb deploy
      - run:
          name: Frontend deploy
          command: aws configure setenv  AWS_SECRET_ACCESS_ID=$AWS_SECRET_ACCESS_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION&&npm run frend-deploy
      - run: 
          name: Backend test
          command: cd udagram-api&&npm install&&npm run test
      - run:
          name: Frontend test
          no_output_timeout: 30m
          command: cd udagram-frontend&&npm install&&npm config set legacy-peer-deps true&&npm run test
      
     
workflows:
  build-deploy:
    jobs:
      - CICD:
          filters:
            branches:
              only: [main,
              artifact: www/Archive.zip
              ]

